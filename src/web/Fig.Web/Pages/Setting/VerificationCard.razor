@using Fig.Web.Models.Setting
<RadzenCard class="mt-2 position-relative">

    <div class="d-flex align-items-center mb-3">
        <div class="pr-2 flex-grow-1">
            <h2 class="mb-1">@Verification.Name</h2>
            @((MarkupString)Verification.Description)
        </div>

        <div class="px-1 top-0 end-0 m-1 @(Verification.SettingsVerified.Any() ? "" : "collapse")">
            Verifies:
            @foreach (var setting in Verification.SettingsVerified)
            {
                <RadzenBadge BadgeStyle="BadgeStyle.Success" IsPill="true" Text="@setting"/>
            }
        </div>

        <div class="px-1 pr-1 pt-2">
            <RadzenButton Click="@(args => Verification.ShowHistory())" Icon="history" ButtonStyle="ButtonStyle.Light"/>
        </div>

        <div>
            <RadzenBadge BadgeStyle="BadgeStyle.Secondary" Text="@Verification.VerificationType" class="position-absolute top-0 end-0 m-1"/>
        </div>
    </div>

    <div class="d-flex">
        <RadzenButton Click="@(args => Verification.Verify())" Text="Run Verification" Icon="offline_bolt" BusyText="Verifying..."
                      IsBusy="@Verification.IsRunning" ButtonStyle="ButtonStyle.Secondary"/>
    </div>

    <div class="p-1 @(Verification.Succeeded == null ? "collapse" : "")">
        <hr/>
        <p>@Verification.ResultTime</p>
    </div>

    <div class="p-1 @(Verification.Succeeded == true ? "" : "collapse")">
        <RadzenBadge BadgeStyle="BadgeStyle.Success" Text="Pass" Style="font-size:x-large"/>
    </div>

    <div class="p-1 @(Verification.Succeeded == false ? "" : "collapse")">
        <RadzenBadge BadgeStyle="BadgeStyle.Danger" Text="Fail" Style="font-size:x-large"/>
    </div>

    <div class="@(Verification.Succeeded == null ? "collapse" : "")">
        <div class="p-1">
            <p>@Verification.ResultMessage</p>
        </div>

        <div class="p-1">
            <RadzenTextArea ReadOnly="true" @bind-Value="@Verification.ResultLog" Style="width: 100%" Rows="4"/>
        </div>
    </div>

    <div class="p-1 transition-visible @(Verification.IsHistoryVisible ? "show" : "transition-collapsed")">

        <hr/>
        <h3>History</h3>
        <RadzenDataGrid AllowFiltering="false" AllowColumnResize="true" FilterMode="FilterMode.Advanced" PageSize="3" AllowPaging="true"
                        Data="@Verification.History" TItem="VerificationResultModel" ColumnWidth="300px">
            <Columns>
                <Radzen.Blazor.RadzenDataGridColumn TItem="VerificationResultModel" Property="ExecutionTime" Title="DateTime" Frozen="true" Width="100px"/>
                <Radzen.Blazor.RadzenDataGridColumn TItem="VerificationResultModel" Property="Success" Title="Success" Frozen="true" Width="100px"/>
                <Radzen.Blazor.RadzenDataGridColumn TItem="VerificationResultModel" Property="Message" Title="Message" Frozen="true" Width="100px"/>
                <Radzen.Blazor.RadzenDataGridColumn TItem="VerificationResultModel" Property="RequestingUser" Title="Requesting User" Width="100px"/>
            </Columns>
        </RadzenDataGrid>
    </div>

</RadzenCard>

@code {

    [Parameter]
    public SettingVerificationModel Verification { get; set; } = null!;

}