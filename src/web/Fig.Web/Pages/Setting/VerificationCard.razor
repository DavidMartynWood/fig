@using Fig.Web.Models.Setting

@if (Verification.IsCompactView)
{
    <RadzenCard class="position-relative custom-card compact-view">
        <div class="colored-line"></div>
        <div class="d-flex align-items-center">
            <h3 class="clickable-heading flex-shrink-0" @onclick="@(() => Verification.ToggleCompactView())">
                @Verification.Name
            </h3>
            <div class="flex-grow-1 px-3 verification-status">VERIFIER</div>
        </div>
    </RadzenCard>
}
else
{
    <RadzenCard class="position-relative custom-card">
        <div class="colored-line"></div>
        
        <div class="card-header d-flex align-items-center">
            <div class="flex-grow-1">
                <h2 class="clickable-heading" @onclick="@(() => Verification.ToggleCompactView())">@Verification.Name</h2>
                <div class="description-text">@((MarkupString)Verification.Description)</div>
            </div>

            <div class="verification-badges @(Verification.SettingsVerified.Any() ? "" : "collapse")">
                <span class="badge-label">Verifies:</span>
                @foreach (var setting in Verification.SettingsVerified)
                {
                    <RadzenBadge BadgeStyle="BadgeStyle.Success" IsPill="true" Text="@setting"/>
                }
            </div>

            <div class="history-button">
                <RadzenButton Click="@(args => Verification.ShowHistory())" Icon="history" ButtonStyle="ButtonStyle.Light"/>
            </div>
        </div>

        <div class="verification-actions">
            <RadzenButton Click="@(args => Verification.Verify())" 
                         Text="Run Verification" 
                         Icon="offline_bolt" 
                         BusyText="Verifying..."
                         IsBusy="@Verification.IsRunning" 
                         ButtonStyle="ButtonStyle.Secondary"/>
        </div>

        <div class="verification-results @(Verification.Succeeded == null ? "collapse" : "")">
            <hr class="divider"/>
            <div class="result-time">@Verification.ResultTime</div>
            
            <div class="result-badge @(Verification.Succeeded == true ? "" : "collapse")">
                <RadzenBadge BadgeStyle="BadgeStyle.Success" Text="Pass"/>
            </div>
            
            <div class="result-badge @(Verification.Succeeded == false ? "" : "collapse")">
                <RadzenBadge BadgeStyle="BadgeStyle.Danger" Text="Fail"/>
            </div>
            
            <div class="result-message">@Verification.ResultMessage</div>
            <RadzenTextArea ReadOnly="true" @bind-Value="@Verification.ResultLog" Rows="3"/>
        </div>

        <div class="history-section @(Verification.IsHistoryVisible ? "show" : "collapse")">
            <hr class="divider"/>
            <h3>History</h3>
            <RadzenDataGrid AllowFiltering="false" 
                           AllowColumnResize="true" 
                           FilterMode="FilterMode.Advanced" 
                           PageSize="3" 
                           AllowPaging="true"
                           Data="@Verification.History" 
                           TItem="VerificationResultModel" 
                           class="compact-grid">
                <Columns>
                    <RadzenDataGridColumn TItem="VerificationResultModel" Property="ExecutionTime" Title="DateTime" Frozen="true" Width="100px"/>
                    <RadzenDataGridColumn TItem="VerificationResultModel" Property="Success" Title="Success" Frozen="true" Width="100px"/>
                    <RadzenDataGridColumn TItem="VerificationResultModel" Property="Message" Title="Message" Frozen="true" Width="100px"/>
                    <RadzenDataGridColumn TItem="VerificationResultModel" Property="RequestingUser" Title="Requesting User" Width="100px"/>
                </Columns>
            </RadzenDataGrid>
        </div>
    </RadzenCard>
}

<style>
    .custom-card {
        position: relative;
        overflow: hidden;
        border: none;
        background: rgba(255, 255, 255, 0.05);
        backdrop-filter: blur(10px);
        transition: all 0.2s ease;
        margin-bottom: 0.25rem !important;
    }

    .custom-card:hover {
        transform: translateY(-1px);
        background: rgba(255, 255, 255, 0.08);
    }

    .colored-line {
        position: absolute;
        left: 0;
        top: 0;
        bottom: 0;
        width: 4px;
        background-color: #2563eb;
        opacity: 0.8;
    }

    .card-header {
        padding: 0.5rem 1rem 0.5rem 1.25rem;
    }

    h2, h3 {
        font-size: 1rem;
        margin: 0;
        line-height: 1.2;
        font-weight: 500;
        color: rgba(255, 255, 255, 0.9);
    }

    .clickable-heading {
        cursor: pointer;
        transition: color 0.2s ease;
    }

    .clickable-heading:hover {
        color: #fff;
    }

    .description-text {
        font-size: 0.85rem;
        line-height: 1.2;
        margin-top: 0.25rem;
        color: rgba(255, 255, 255, 0.7);
    }

    .verification-badges {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        margin: 0 1rem;
    }

    .badge-label {
        font-size: 0.85rem;
        color: rgba(255, 255, 255, 0.7);
    }

    ::deep .rz-badge {
        padding: 0.2rem 0.5rem;
        font-size: 0.75rem;
        opacity: 0.8;
    }

    .verification-actions {
        padding: 0.5rem 1rem;
    }

    ::deep .rz-button {
        padding: 0.25rem 0.5rem;
        min-height: 1.75rem;
        font-size: 0.9rem;
    }

    .verification-results {
        padding: 0 1rem;
    }

    .result-time {
        font-size: 0.85rem;
        color: rgba(255, 255, 255, 0.7);
        margin-bottom: 0.5rem;
    }

    .result-badge {
        margin: 0.5rem 0;
    }

    .result-message {
        font-size: 0.9rem;
        margin: 0.5rem 0;
    }

    ::deep .rz-textarea {
        font-size: 0.85rem;
        background: rgba(0, 0, 0, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.1);
        margin: 0.5rem 0;
    }

    .divider {
        border-color: rgba(255, 255, 255, 0.1);
        margin: 0.5rem 0;
    }

    .history-section {
        padding: 0 1rem;
    }

    .compact-grid {
        font-size: 0.85rem;
    }

    .compact-view {
        padding: 0.25rem 0.5rem;
    }

    .verification-status {
        font-size: 0.85rem;
        color: rgba(255, 255, 255, 0.7);
    }
</style>


@code {

    [Parameter]
    public SettingVerificationModel Verification { get; set; } = null!;

}